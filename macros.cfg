

########################################
## MACROS
########################################
# Добавить следующие строки в начальный джикод слайсера
# Cura: START_PRINT EXTRUDER_TEMP={material_print_temperature_layer_0} BED_TEMP={material_bed_temperature_layer_0}
# PrusaSlicer: 
# M140 S0
# M104 S0
# START_PRINT EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature]
# Добавить в завершающий джикод: END_PRINT


# [gcode_macro m300]
# description: Emits and audible beep.
#   Usage: M300 [P<duration>] [S<frequency>]
# gcode:
#   {% if "output_pin BEEPER_pin" in printer %}
#     {% set P = params.P|default(1000)|int %}                             #Default beep duration (in ms) for M300 command.
#     {% set S = params.S|default(500)|int %}                            # Default beep frequency (in Hz) for M300 command.
#     SET_PIN PIN=BEEPER_pin VALUE=1 CYCLE_TIME={ 1/S if S > 0 else 1 }
#     G4 P{P}
#     SET_PIN PIN=BEEPER_pin VALUE=0
#   {% else %}
#     {action_respond_info(
#        "M300 is disabled. To enable create an [output_pin BEEPER_pin] config.")}
#   {% endif %}
  
[gcode_macro G29_CREATE_BED_MESH]
description: creates automated homing and bed mesh
gcode:
  G28
  BED_MESH_CALIBRATE
  DATA_SAVE

[gcode_macro SHUTDOWN_MACHINE]                                                  # по тапу кнопки выключает хост правильно, 
gcode:                                                                          # завершая работу системы   
    {action_call_remote_method("shutdown_machine")}

[gcode_macro CANCEL_PRINT]                                                      # отмена печати
rename_existing: BASE_CANCEL_PRINT 
gcode:
    {% set E = printer["gcode_macro START_PRINT"].retract|float %}
    TURN_OFF_HEATERS
    M107                                                                        # turn off fan
    G91
    G1 E-{E} F1500                                                              # retract
    G90
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    PARK                                                                        # парковка по отдельному
    M18                                                                         # макросу

[gcode_macro PAUSE]                                                             # пауза во время печати
rename_existing: BASE_PAUSE
gcode:
    {% set E = printer["gcode_macro START_PRINT"].retract|float %}
    SAVE_GCODE_STATE NAME=PAUSE_STATE
    BASE_PAUSE
    G91
    G1 E-{E} F1500                                                              # длина ретракта
    G90
    PARK                                                                        # парковка по отдельному макросу
    
[gcode_macro RESUME]                                                            # возобновляет печать
rename_existing: BASE_RESUME
gcode:
    {% set E = printer["gcode_macro START_PRINT"].retract|float %}
    G91
    G1 E{E} F1500                                                               # длина деретракта
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_STATE MOVE=1
    BASE_RESUME

[gcode_macro PARK]                                                              # парковка
gcode:
    {% set x_park = params.X|default(10)|float %}                               # нужно изменить координату
    {% set y_park = params.Y|default(200)|float %}                              # нужно изменить координату
    {% set z_park = params.Z|default(100)|float + printer.toolhead.position.z|float %} # нужно изменить 
    {% set x_max = printer.toolhead.axis_maximum.x|float %}                           # координату
    {% set y_max = printer.toolhead.axis_maximum.y|float %}
    {% set z_max = printer.toolhead.axis_maximum.z|float %}
    {% if x_park > x_max %}
        {% set x_park = x_max %}
    {% endif %}
    {% if y_park > y_max %}
        {% set y_park = y_max %}
    {% endif %}
    {% if z_park > z_max %}
        {% set z_park = z_max %}
    {% endif %}
    SAVE_GCODE_STATE NAME=PARK_STATE
    G90                                                                         # absolute positioning
    G1 Z{z_park} F1500
    G1 X{x_park} Y{y_park} F5000
    RESTORE_GCODE_STATE name=PARK_STATE

[gcode_macro START_PRINT]                                                       # стартовый джикод
variable_retract: 3
gcode:
    M117 Heating
    {% set extruder_temp = params.EXTRUDER_TEMP|default(220)|float %}
    {% set bed_temp = params.BED_TEMP|default(70)|float %}                      
    {% set E = printer["gcode_macro START_PRINT"].retract|float %}              
    CLEAR_PAUSE
    M220 S100                                                                   # reset feedrate
    M221 S100
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp}                  # set bed t℃
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp * 0.90}                # ожидание нагрева стола
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp}               # set nozzle t℃
    G90                                                                         # absolute positioning
    M82                                                                         # absolute extrusion mode
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp}                       # wait until
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}                    # wait until
    M117 Home  
    G28                                                                         # home
    BED_MESH_PROFILE LOAD=default
    G0 Z10 F1500                                                                # raise Z
    G92 E0                                                                      # reset extruder
    G1 E{E} F1500                                                               # prime
    G92 E0                                                                      # reset extruder
    M117 Printing...

[gcode_macro END_PRINT]                                                         # завершающий джикод
gcode:
    {% set E = printer["gcode_macro START_PRINT"].retract|float %}
    TURN_OFF_HEATERS
    M107                                                                        # turn off fan
    G91                                                                         # relative positioning
    G1 E-{E} F1500                                                              # retract
    G0 X5 Y5 F5000                                                              # wipe
    G0 Z2 F1500                                                                 # raise Z
    G90                                                                         # absolute positioning
    PARK
    M84                                                                         # turn off all motors
    M106 S200
    G4 P100000
    M106 S0

[gcode_macro PID_E]                                                             # калибровка пид экструдера
gcode:
    {% set T = params.T|default(240) %}
    PID_CALIBRATE HEATER=extruder TARGET={T}

[gcode_macro PID_B]                                                             # калибровка пид стола
gcode:
    {% set T = params.T|default(80) %}
    PID_CALIBRATE HEATER=heater_bed TARGET={T}

[gcode_macro MOTOR_OFF]                                                         # отключение моторов
gcode:
    M18

# [gcode_macro M81]                                                               # отключение 3д принтера
# gcode:                                                                          # требует настройки пина
#     SET_PIN PIN=POWER_OFF VALUE=1

[gcode_macro LEVEL_BED]                                                         # регулировка винтов стола
gcode:
  M117 GO HOME ALL AXIS
  G28
  M117 ADJUST BED SCREWS...
  BED_SCREWS_ADJUST

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10
description: Test acceleration speed.
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED